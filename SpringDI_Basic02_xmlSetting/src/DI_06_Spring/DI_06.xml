<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--
객체의 생성과 조립(주입) 

*Spring은 자신만의 [컨테이너]를 제공 받음
-> 컨테이너 = Spring 전용 메모리 공간 = IOC 
컨테이너 안에 XML, 또는 Annotation 을 통해서 객체의 생성과 조립을 수행한다
결국에는 객체간의 관계설정도 하는거임

DI_05.xml 의 역할은 

ApplicationContext context = ... 하면 컨테이너가 생성되고 (DI_05_xml)
DI_05_xml 문서를 읽어요(read) 해서 안에 있는 코드를 실행함 = (객체 생성과 의존관계를 설정)

context(컨테이너) 안에서 필요한 자원(객체)를 불러서 사용함 (= getbean)

: 이걸 제어의 역전 이라고 부름(프로그램의 제어구조가 바꾼다)
: 작은 단위의 부품을 만들어 놓고 그것을 조립하는 행위(레고블럭 처럼)

https://cafe.naver.com/bit2021?iframe_url=/MyCafeIntro.nhn%3Fclubid=30348919
참조!


java 코드
	OracleArticleDao articledao = new OracleArticleDao();
	MySqlArticleDao articledao  = new MySqlArticleDao();
	ArticleService articleservice = new ArticleService(articledao);

	Article article = new Article();
-->

	<!-- <bean  id="articledao"   class="DI_06_Spring.OracleArticleDao"></bean> -->
  	<bean  id="articledao"   class="DI_06_Spring.MySqlArticleDao"></bean>
  	<bean  id="articleservice"   class="DI_06_Spring.ArticleService">
  			<!-- 값이 아니라 주소값 주입 -->
  			<constructor-arg>
  					<ref  bean="articledao" />
  			</constructor-arg>
  	</bean>
  	<!-- ArticleService articleservice = new ArticleService(articledao); -->
  	
  	<bean id="article"   class="DI_06_Spring.Article"></bean>
  	
</beans>
